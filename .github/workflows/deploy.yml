name: 리액트 앱 컨테이너 기반 배포하기

on:
  push:
    branches:
      - main

jobs:
  ContainerBased-Deploy-Job:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 의 파일 가져오기
        uses: actions/checkout@v4

      - name: Node.js 설치
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: .env 파일 생성
        run: |
          cd devops-final-front
          echo "${{ secrets.ENV }}" > .env

      - name: 의존성 설치
        run: |
          npm install

      - name: 리액트 앱 빌드
        run: |
          npm run build

      - name: Dockerfile 생성
        run: |
          echo 'FROM nginx:alpine' > Dockerfile
          echo 'COPY build /usr/share/nginx/html' >> Dockerfile

      - name: AWS ECR 접근하기 위해 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_PUBLIC }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_PRIVATE }}

      - name: AWS ECR에 로그인하기
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build -t react-app .

      - name: Docker 이미지에 Tag 붙이기
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)
          docker tag react-app ${{ steps.login-ecr.outputs.registry }}/react-app:${IMAGE_TAG}
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: ECR에 Docker 이미지 push
        run: docker push ${{ steps.login-ecr.outputs.registry }}/react-app:${{ env.IMAGE_TAG }}
